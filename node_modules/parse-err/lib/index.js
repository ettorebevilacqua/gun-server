"use strict";

var isError = require('iserror'); // we want to support parsing other fields than the standard:
// <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors>
// <https://github.com/stripe/stripe-node/blob/3c07d851cf897490d8b93dd4457dda0c4c8e667f/lib/Error.js#L33>


var parseErr = function parseErr(err) {
  var fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  if (!isError(err)) throw new Error('`err` must be an Error');
  if (!Array.isArray(fields)) throw new Error('`fields` must be an Array');
  var keys = {};
  Object.getOwnPropertyNames(Object.getPrototypeOf(err)).concat(Object.getOwnPropertyNames(err)).forEach(function (key) {
    if (typeof err[key] !== 'function') keys[key] = err[key];
  });
  if (!keys.name && err.constructor.name) keys.name = err.constructor.name;
  return Array.isArray(fields) && fields.length !== 0 ? keys.filter(function (key) {
    return fields.indexOf(key) !== -1;
  }) : keys;
};

module.exports = parseErr;